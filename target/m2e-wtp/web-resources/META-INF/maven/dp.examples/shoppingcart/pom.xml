<!--
  ~ Copyright (C) Denis Pavlov 2013 www.inspire-software.com
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~         http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>dp.examples</groupId>
    <artifactId>shoppingcart</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>ShoppingCart</name>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Shared version number properties -->
    <properties>
        <org.springframework.version>3.1.2.RELEASE</org.springframework.version>

        <commons-dbcp.version>1.4</commons-dbcp.version>
        <sqlite-jdbc.version>3.7.2</sqlite-jdbc.version>
        <hsqldb-jdbc.version>2.2.9</hsqldb-jdbc.version>

        <hibernate-core.version>4.1.9.Final</hibernate-core.version>
        <hibernate-search.version>4.2.0.Final</hibernate-search.version>

        <xalan.version>2.7.0</xalan.version>

        <backport-util-concurrent.version>3.1</backport-util-concurrent.version>

        <ehcache.version>2.6.6</ehcache.version>

    </properties>

    <dependencies>

        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.15</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
            </exclusions>
            <scope>runtime</scope>
        </dependency>

        <!--
              JSP taglib support
          -->
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>


        <!--
              Core utilities used by other modules.
              Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Expression Language (depends on spring-core)
              Define this if you use Spring Expression APIs (org.springframework.expression.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Bean Factory and JavaBeans utilities (depends on spring-core)
              Define this if you use Spring Bean APIs (org.springframework.beans.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Aspect Oriented Programming (AOP) Framework (depends on spring-core, spring-beans)
              Define this if you use Spring AOP APIs (org.springframework.aop.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
              This is the central artifact for Spring's Dependency Injection Container and is generally always defined
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
              Define this if you need any of these integrations
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
              Define this if you use Spring Transactions or DAO Exception Hierarchy
              (org.springframework.transaction.*/org.springframework.dao.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
              Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
              (depends on spring-core, spring-beans, spring-context, spring-tx)
              Define this if you need ORM (org.springframework.orm.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
              (depends on spring-core, spring-beans, spring-context)
              Define this if you need OXM (org.springframework.oxm.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-oxm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Web application development utilities applicable to both Servlet and Portlet Environments
              (depends on spring-core, spring-beans, spring-context)
              Define this if you use Spring MVC, or wish to use Struts, JSF, or another web framework with Spring (org.springframework.web.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Spring MVC for Servlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
              Define this if you use Spring MVC with a Servlet Container such as Apache Tomcat (org.springframework.web.servlet.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Spring MVC for Portlet Environments (depends on spring-core, spring-beans, spring-context, spring-web)
              Define this if you use Spring MVC with a Portlet Container (org.springframework.web.portlet.*)
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc-portlet</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>

        <!--
              Support for testing Spring applications with tools such as JUnit and TestNG
              This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
          -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate-core.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
            <version>${xalan.version}</version>
        </dependency>
        <!-- dependency>
           <groupId>org.hibernate</groupId>
           <artifactId>hibernate-search</artifactId>
           <version>${hibernate-search.version}</version>
       </dependency -->

        <!-- connection pooling -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>${commons-dbcp.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- HSQLDB JDBC library -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb-jdbc.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- EhCache -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache.version}</version>
        </dependency>

        <!-- Unit and integration testing -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.9</version>
            <scope>test</scope>
        </dependency>


    </dependencies>
</project>